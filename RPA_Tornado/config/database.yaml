# 数据库配置文件
# 定义数据库连接、迁移、备份等配置

# 全局数据库配置
global:
  enabled: true
  default_engine: "postgresql"  # postgresql, mysql, sqlite
  timezone: "UTC"
  charset: "utf8mb4"
  
  # 连接池配置
  pool:
    min_size: 5
    max_size: 20
    max_overflow: 30
    pool_timeout: 30
    pool_recycle: 3600
    pool_pre_ping: true
  
  # 查询配置
  query:
    echo: false  # 是否打印SQL语句
    echo_pool: false  # 是否打印连接池信息
    autocommit: false
    autoflush: true
    expire_on_commit: true

# 数据库连接配置
connections:
  # 主数据库
  primary:
    engine: "postgresql"
    host: "${DB_HOST:localhost}"
    port: "${DB_PORT:5432}"
    database: "${DB_NAME:rpa_tornado}"
    username: "${DB_USER:postgres}"
    password: "${DB_PASSWORD:password}"
    
    # 连接选项
    options:
      sslmode: "prefer"
      connect_timeout: 10
      command_timeout: 30
      application_name: "rpa_tornado"
    
    # 连接池配置
    pool:
      min_size: 5
      max_size: 20
      max_overflow: 10
      pool_timeout: 30
      pool_recycle: 3600
  
  # 只读副本
  readonly:
    engine: "postgresql"
    host: "${DB_READONLY_HOST:localhost}"
    port: "${DB_READONLY_PORT:5432}"
    database: "${DB_READONLY_NAME:rpa_tornado}"
    username: "${DB_READONLY_USER:postgres}"
    password: "${DB_READONLY_PASSWORD:password}"
    
    # 连接选项
    options:
      sslmode: "prefer"
      connect_timeout: 10
      command_timeout: 30
      application_name: "rpa_tornado_readonly"
    
    # 连接池配置
    pool:
      min_size: 2
      max_size: 10
      max_overflow: 5
      pool_timeout: 30
      pool_recycle: 3600
  
  # 缓存数据库 (Redis)
  cache:
    engine: "redis"
    host: "${REDIS_HOST:localhost}"
    port: "${REDIS_PORT:6379}"
    database: "${REDIS_DB:0}"
    password: "${REDIS_PASSWORD:}"
    
    # Redis配置
    options:
      decode_responses: true
      socket_timeout: 5
      socket_connect_timeout: 5
      socket_keepalive: true
      socket_keepalive_options: {}
      health_check_interval: 30
    
    # 连接池配置
    pool:
      max_connections: 50
      retry_on_timeout: true
      retry_on_error: ["ConnectionError", "TimeoutError"]
  
  # 会话存储 (Redis)
  session:
    engine: "redis"
    host: "${SESSION_REDIS_HOST:localhost}"
    port: "${SESSION_REDIS_PORT:6379}"
    database: "${SESSION_REDIS_DB:1}"
    password: "${SESSION_REDIS_PASSWORD:}"
    
    # Redis配置
    options:
      decode_responses: true
      socket_timeout: 5
      socket_connect_timeout: 5
    
    # 连接池配置
    pool:
      max_connections: 20
      retry_on_timeout: true

# 数据库迁移配置
migrations:
  enabled: true
  
  # 迁移文件配置
  files:
    directory: "migrations"
    naming_pattern: "{timestamp}_{name}.sql"
    encoding: "utf-8"
  
  # 迁移表配置
  table:
    name: "schema_migrations"
    schema: "public"
  
  # 自动迁移
  auto_migrate:
    enabled: false  # 生产环境建议关闭
    on_startup: false
    backup_before_migrate: true
  
  # 迁移验证
  validation:
    check_syntax: true
    dry_run_first: true
    rollback_on_error: true

# 数据库备份配置
backup:
  enabled: true
  
  # 备份策略
  strategy:
    # 全量备份
    full:
      enabled: true
      schedule: "0 2 * * 0"  # 每周日凌晨2点
      retention_days: 30
      compression: true
      format: "custom"  # custom, plain, tar
    
    # 增量备份
    incremental:
      enabled: true
      schedule: "0 2 * * 1-6"  # 周一到周六凌晨2点
      retention_days: 7
      compression: true
    
    # 事务日志备份
    transaction_log:
      enabled: true
      schedule: "*/15 * * * *"  # 每15分钟
      retention_hours: 24
  
  # 备份存储
  storage:
    # 本地存储
    local:
      enabled: true
      path: "backups/database"
      max_size: "10GB"
    
    # 远程存储 (S3)
    s3:
      enabled: false
      bucket: "${BACKUP_S3_BUCKET}"
      region: "${BACKUP_S3_REGION}"
      access_key: "${BACKUP_S3_ACCESS_KEY}"
      secret_key: "${BACKUP_S3_SECRET_KEY}"
      prefix: "database-backups/"
    
    # 远程存储 (FTP)
    ftp:
      enabled: false
      host: "${BACKUP_FTP_HOST}"
      port: "${BACKUP_FTP_PORT:21}"
      username: "${BACKUP_FTP_USER}"
      password: "${BACKUP_FTP_PASSWORD}"
      path: "/backups/database"
  
  # 备份验证
  validation:
    enabled: true
    verify_integrity: true
    test_restore: false  # 是否测试恢复
  
  # 备份通知
  notifications:
    enabled: true
    on_success: false
    on_failure: true
    email:
      enabled: true
      to: ["admin@example.com"]
    slack:
      enabled: false
      webhook_url: "${BACKUP_SLACK_WEBHOOK}"

# 数据库监控配置
monitoring:
  enabled: true
  
  # 性能监控
  performance:
    enabled: true
    
    # 慢查询监控
    slow_queries:
      enabled: true
      threshold: 1.0  # 秒
      log_queries: true
      alert_threshold: 5.0  # 秒
    
    # 连接监控
    connections:
      enabled: true
      max_connections_threshold: 80  # 百分比
      idle_connection_threshold: 300  # 秒
    
    # 锁监控
    locks:
      enabled: true
      deadlock_detection: true
      lock_timeout_threshold: 30  # 秒
  
  # 健康检查
  health_check:
    enabled: true
    interval: 30  # 秒
    timeout: 5  # 秒
    
    # 检查项目
    checks:
      connection: true
      query_execution: true
      disk_space: true
      replication_lag: true
  
  # 指标收集
  metrics:
    enabled: true
    collection_interval: 60  # 秒
    
    # 收集的指标
    collect:
      connection_count: true
      query_count: true
      transaction_count: true
      cache_hit_ratio: true
      disk_usage: true
      cpu_usage: true
      memory_usage: true
  
  # 告警配置
  alerts:
    enabled: true
    
    # 告警规则
    rules:
      high_cpu_usage:
        threshold: 80  # 百分比
        duration: 300  # 秒
        severity: "warning"
      
      high_memory_usage:
        threshold: 85  # 百分比
        duration: 300  # 秒
        severity: "warning"
      
      disk_space_low:
        threshold: 90  # 百分比
        duration: 60  # 秒
        severity: "critical"
      
      connection_limit_reached:
        threshold: 95  # 百分比
        duration: 60  # 秒
        severity: "critical"
      
      replication_lag_high:
        threshold: 60  # 秒
        duration: 300  # 秒
        severity: "warning"

# 数据库维护配置
maintenance:
  enabled: true
  
  # 自动维护
  auto_maintenance:
    enabled: true
    
    # 统计信息更新
    update_statistics:
      enabled: true
      schedule: "0 3 * * *"  # 每天凌晨3点
    
    # 索引重建
    rebuild_indexes:
      enabled: true
      schedule: "0 4 * * 0"  # 每周日凌晨4点
      fragmentation_threshold: 30  # 百分比
    
    # 清理过期数据
    cleanup_expired_data:
      enabled: true
      schedule: "0 5 * * *"  # 每天凌晨5点
      
      # 清理规则
      rules:
        - table: "logs"
          column: "created_at"
          retention_days: 30
        - table: "sessions"
          column: "last_activity"
          retention_days: 7
        - table: "temp_data"
          column: "created_at"
          retention_hours: 24
  
  # 手动维护
  manual_maintenance:
    # 维护窗口
    maintenance_window:
      start_time: "02:00"
      end_time: "06:00"
      timezone: "UTC"
      days: ["Sunday"]
    
    # 维护任务
    tasks:
      vacuum: true
      analyze: true
      reindex: true
      check_constraints: true

# 数据库安全配置
security:
  enabled: true
  
  # 访问控制
  access_control:
    # IP白名单
    ip_whitelist:
      enabled: false
      addresses: []
    
    # 用户权限
    user_permissions:
      enforce_least_privilege: true
      audit_permissions: true
    
    # 连接加密
    encryption:
      require_ssl: false
      ssl_cert_path: ""
      ssl_key_path: ""
      ssl_ca_path: ""
  
  # 审计日志
  audit_log:
    enabled: true
    
    # 审计事件
    events:
      login_attempts: true
      ddl_operations: true
      dml_operations: false  # 可能产生大量日志
      privilege_changes: true
      configuration_changes: true
    
    # 日志存储
    storage:
      local_file: true
      database_table: false
      syslog: false
    
    # 日志轮转
    rotation:
      max_size: "100MB"
      max_files: 10
      compress: true
  
  # 数据加密
  encryption:
    # 静态数据加密
    at_rest:
      enabled: false
      algorithm: "AES-256"
      key_management: "external"  # internal, external
    
    # 传输加密
    in_transit:
      enabled: true
      protocol: "TLS"
      min_version: "1.2"

# 环境特定配置
environments:
  development:
    global:
      query:
        echo: true
    connections:
      primary:
        pool:
          min_size: 2
          max_size: 5
    backup:
      enabled: false
    monitoring:
      performance:
        slow_queries:
          threshold: 0.5
  
  testing:
    global:
      query:
        echo: false
    connections:
      primary:
        database: "${DB_NAME:rpa_tornado_test}"
        pool:
          min_size: 1
          max_size: 3
    backup:
      enabled: false
    monitoring:
      enabled: false
  
  production:
    global:
      query:
        echo: false
    connections:
      primary:
        pool:
          min_size: 10
          max_size: 50
    backup:
      enabled: true
    monitoring:
      enabled: true
      alerts:
        enabled: true
    security:
      access_control:
        ip_whitelist:
          enabled: true
      encryption:
        at_rest:
          enabled: true
        in_transit:
          enabled: true

# 数据库工具配置
tools:
  # 数据库管理工具
  admin_tools:
    pgadmin:
      enabled: false
      host: "localhost"
      port: 5050
    
    adminer:
      enabled: false
      host: "localhost"
      port: 8080
  
  # 数据同步工具
  sync_tools:
    # 数据复制
    replication:
      enabled: false
      type: "streaming"  # streaming, logical
      lag_threshold: 60  # 秒
    
    # 数据同步
    sync:
      enabled: false
      schedule: "0 1 * * *"  # 每天凌晨1点
      source: "primary"
      target: "readonly"
  
  # 性能分析工具
  profiling:
    pg_stat_statements:
      enabled: true
      track: "all"
      max_statements: 5000
    
    explain_analyze:
      enabled: true
      auto_explain_threshold: 2.0  # 秒

# 扩展配置
extensions:
  # PostgreSQL扩展
  postgresql:
    # 必需扩展
    required:
      - "uuid-ossp"
      - "pg_stat_statements"
    
    # 可选扩展
    optional:
      - "pg_trgm"  # 文本搜索
      - "btree_gin"  # 索引优化
      - "pg_buffercache"  # 缓存分析
  
  # 自定义函数
  custom_functions:
    enabled: true
    directory: "sql/functions"
  
  # 存储过程
  stored_procedures:
    enabled: true
    directory: "sql/procedures"

# 数据库文档配置
documentation:
  enabled: true
  
  # 自动生成文档
  auto_generate:
    enabled: true
    output_format: ["html", "markdown"]
    output_directory: "docs/database"
    
    # 包含内容
    include:
      tables: true
      views: true
      functions: true
      indexes: true
      constraints: true
      triggers: true
  
  # 文档模板
  templates:
    table_template: "templates/table.md"
    view_template: "templates/view.md"
    function_template: "templates/function.md"
  
  # 文档更新
  update:
    on_schema_change: true
    schedule: "0 6 * * *"  # 每天凌晨6点

# 测试配置
testing:
  enabled: true
  
  # 单元测试
  unit_tests:
    enabled: true
    framework: "pytest"
    database: "${TEST_DB_NAME:rpa_tornado_test}"
    
    # 测试数据
    fixtures:
      enabled: true
      directory: "tests/fixtures"
      auto_load: true
  
  # 集成测试
  integration_tests:
    enabled: true
    test_migrations: true
    test_backups: true
    test_performance: true
  
  # 性能测试
  performance_tests:
    enabled: true
    concurrent_connections: 50
    test_duration: 300  # 秒
    
    # 测试场景
    scenarios:
      read_heavy: true
      write_heavy: true
      mixed_workload: true

# 日志配置
logging:
  enabled: true
  
  # 数据库日志
  database_logs:
    enabled: true
    level: "INFO"
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    
    # 日志文件
    file:
      enabled: true
      path: "logs/database.log"
      max_size: "50MB"
      backup_count: 5
    
    # 控制台输出
    console:
      enabled: true
      level: "WARNING"
  
  # 查询日志
  query_logs:
    enabled: false  # 生产环境建议关闭
    include_parameters: false
    slow_query_only: true
    threshold: 1.0  # 秒
  
  # 错误日志
  error_logs:
    enabled: true
    include_traceback: true
    notify_on_error: true

# 缓存配置
caching:
  enabled: true
  
  # 查询缓存
  query_cache:
    enabled: true
    ttl: 300  # 秒
    max_size: 1000
    
    # 缓存策略
    strategy: "lru"  # lru, lfu, fifo
    
    # 缓存键
    key_prefix: "db_query:"
    include_parameters: true
  
  # 结果缓存
  result_cache:
    enabled: true
    ttl: 600  # 秒
    max_size: 500
    
    # 缓存条件
    conditions:
      min_execution_time: 0.5  # 秒
      max_result_size: "1MB"
  
  # 缓存失效
  invalidation:
    enabled: true
    
    # 失效策略
    strategies:
      time_based: true
      event_based: true
      manual: true
    
    # 失效事件
    events:
      table_update: true
      schema_change: true
      configuration_change: true