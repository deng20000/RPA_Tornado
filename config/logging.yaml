# 日志配置文件
# 定义应用日志记录、格式化和输出配置

# 全局日志配置
global:
  version: 1
  disable_existing_loggers: false
  
  # 根日志级别
  root_level: "INFO"
  
  # 日志格式
  default_format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  detailed_format: "%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(funcName)s() - %(message)s"
  json_format: true  # 是否使用JSON格式
  
  # 时间格式
  date_format: "%Y-%m-%d %H:%M:%S"
  timezone: "UTC"
  
  # 编码
  encoding: "utf-8"

# 格式化器配置
formatters:
  # 标准格式化器
  standard:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  # 详细格式化器
  detailed:
    format: "%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(funcName)s() - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  # JSON格式化器
  json:
    class: "pythonjsonlogger.jsonlogger.JsonFormatter"
    format: "%(asctime)s %(name)s %(levelname)s %(filename)s %(lineno)d %(funcName)s %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  # 简单格式化器
  simple:
    format: "%(levelname)s - %(message)s"
  
  # 访问日志格式化器
  access:
    format: "%(asctime)s - %(remote_ip)s - \"%(method)s %(uri)s %(protocol)s\" %(status_code)s %(response_size)s \"%(referer)s\" \"%(user_agent)s\" %(request_time)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  # 错误日志格式化器
  error:
    format: "%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(funcName)s() - %(message)s\n%(exc_info)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  # 安全日志格式化器
  security:
    format: "%(asctime)s - SECURITY - %(levelname)s - %(remote_ip)s - %(user_id)s - %(action)s - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

# 处理器配置
handlers:
  # 控制台处理器
  console:
    class: "logging.StreamHandler"
    level: "INFO"
    formatter: "standard"
    stream: "ext://sys.stdout"
  
  # 控制台错误处理器
  console_error:
    class: "logging.StreamHandler"
    level: "ERROR"
    formatter: "error"
    stream: "ext://sys.stderr"
  
  # 应用日志文件处理器
  app_file:
    class: "logging.handlers.RotatingFileHandler"
    level: "INFO"
    formatter: "detailed"
    filename: "logs/app.log"
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: "utf-8"
  
  # 错误日志文件处理器
  error_file:
    class: "logging.handlers.RotatingFileHandler"
    level: "ERROR"
    formatter: "error"
    filename: "logs/error.log"
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: "utf-8"
  
  # 访问日志文件处理器
  access_file:
    class: "logging.handlers.RotatingFileHandler"
    level: "INFO"
    formatter: "access"
    filename: "logs/access.log"
    maxBytes: 10485760  # 10MB
    backupCount: 20
    encoding: "utf-8"
  
  # 安全日志文件处理器
  security_file:
    class: "logging.handlers.RotatingFileHandler"
    level: "WARNING"
    formatter: "security"
    filename: "logs/security.log"
    maxBytes: 10485760  # 10MB
    backupCount: 30
    encoding: "utf-8"
  
  # 性能日志文件处理器
  performance_file:
    class: "logging.handlers.RotatingFileHandler"
    level: "INFO"
    formatter: "json"
    filename: "logs/performance.log"
    maxBytes: 10485760  # 10MB
    backupCount: 15
    encoding: "utf-8"
  
  # 调试日志文件处理器
  debug_file:
    class: "logging.handlers.RotatingFileHandler"
    level: "DEBUG"
    formatter: "detailed"
    filename: "logs/debug.log"
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: "utf-8"
  
  # 按时间轮转的日志处理器
  timed_file:
    class: "logging.handlers.TimedRotatingFileHandler"
    level: "INFO"
    formatter: "json"
    filename: "logs/app_timed.log"
    when: "midnight"
    interval: 1
    backupCount: 30
    encoding: "utf-8"
  
  # Syslog处理器
  syslog:
    class: "logging.handlers.SysLogHandler"
    level: "WARNING"
    formatter: "standard"
    address: ["/dev/log"]  # Linux
    facility: "local0"
  
  # SMTP邮件处理器
  email:
    class: "logging.handlers.SMTPHandler"
    level: "CRITICAL"
    formatter: "error"
    mailhost: "${SMTP_HOST}"
    fromaddr: "alerts@yourdomain.com"
    toaddrs:
      - "admin@yourdomain.com"
    subject: "RPA Tornado Critical Error"
    credentials:
      - "${SMTP_USERNAME}"
      - "${SMTP_PASSWORD}"
    secure: []  # 使用TLS
  
  # HTTP处理器
  http:
    class: "logging.handlers.HTTPHandler"
    level: "ERROR"
    formatter: "json"
    host: "log-collector.yourdomain.com"
    url: "/api/logs"
    method: "POST"
    secure: true
  
  # 队列处理器（异步日志）
  queue:
    class: "logging.handlers.QueueHandler"
    queue:
      class: "queue.Queue"
      maxsize: 1000
    listener:
      handlers:
        - "app_file"
        - "error_file"
      respect_handler_level: true

# 日志记录器配置
loggers:
  # 根日志记录器
  root:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
      - "error_file"
    propagate: false
  
  # 应用主日志记录器
  app:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
      - "error_file"
    propagate: false
    qualname: "app"
  
  # Tornado框架日志记录器
  tornado:
    level: "WARNING"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "tornado"
  
  # Tornado访问日志记录器
  tornado.access:
    level: "INFO"
    handlers:
      - "access_file"
    propagate: false
    qualname: "tornado.access"
  
  # Tornado应用日志记录器
  tornado.application:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
      - "error_file"
    propagate: false
    qualname: "tornado.application"
  
  # Tornado通用日志记录器
  tornado.general:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "tornado.general"
  
  # 数据库日志记录器
  database:
    level: "WARNING"
    handlers:
      - "console"
      - "app_file"
      - "error_file"
    propagate: false
    qualname: "database"
  
  # SQL查询日志记录器
  sqlalchemy:
    level: "WARNING"
    handlers:
      - "app_file"
    propagate: false
    qualname: "sqlalchemy"
  
  # SQLAlchemy引擎日志记录器
  sqlalchemy.engine:
    level: "WARNING"
    handlers:
      - "app_file"
    propagate: false
    qualname: "sqlalchemy.engine"
  
  # Redis日志记录器
  redis:
    level: "WARNING"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "redis"
  
  # 安全日志记录器
  security:
    level: "WARNING"
    handlers:
      - "console"
      - "security_file"
      - "email"
    propagate: false
    qualname: "security"
  
  # 认证日志记录器
  auth:
    level: "INFO"
    handlers:
      - "console"
      - "security_file"
    propagate: false
    qualname: "auth"
  
  # API日志记录器
  api:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
      - "access_file"
    propagate: false
    qualname: "api"
  
  # 性能日志记录器
  performance:
    level: "INFO"
    handlers:
      - "performance_file"
    propagate: false
    qualname: "performance"
  
  # 业务逻辑日志记录器
  business:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "business"
  
  # 外部API日志记录器
  external_api:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
      - "error_file"
    propagate: false
    qualname: "external_api"
  
  # 领星API日志记录器
  lingxing_api:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "lingxing_api"
  
  # 中间件日志记录器
  middleware:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "middleware"
  
  # 限流日志记录器
  rate_limit:
    level: "WARNING"
    handlers:
      - "console"
      - "security_file"
    propagate: false
    qualname: "rate_limit"
  
  # 缓存日志记录器
  cache:
    level: "WARNING"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "cache"
  
  # 配置日志记录器
  config:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "config"
  
  # 工具日志记录器
  utils:
    level: "INFO"
    handlers:
      - "console"
      - "app_file"
    propagate: false
    qualname: "utils"
  
  # 调试日志记录器
  debug:
    level: "DEBUG"
    handlers:
      - "debug_file"
    propagate: false
    qualname: "debug"
  
  # 第三方库日志记录器
  urllib3:
    level: "WARNING"
    handlers:
      - "app_file"
    propagate: false
    qualname: "urllib3"
  
  requests:
    level: "WARNING"
    handlers:
      - "app_file"
    propagate: false
    qualname: "requests"
  
  asyncio:
    level: "WARNING"
    handlers:
      - "app_file"
    propagate: false
    qualname: "asyncio"

# 日志过滤器配置
filters:
  # 敏感信息过滤器
  sensitive_filter:
    class: "app.core.logging.filters.SensitiveDataFilter"
    sensitive_fields:
      - "password"
      - "token"
      - "secret"
      - "api_key"
      - "authorization"
      - "credit_card"
      - "ssn"
    replacement: "[FILTERED]"
  
  # 请求ID过滤器
  request_id_filter:
    class: "app.core.logging.filters.RequestIdFilter"
  
  # 用户ID过滤器
  user_id_filter:
    class: "app.core.logging.filters.UserIdFilter"
  
  # 环境过滤器
  environment_filter:
    class: "app.core.logging.filters.EnvironmentFilter"
    environment: "${ENVIRONMENT}"
  
  # 级别过滤器
  level_filter:
    class: "app.core.logging.filters.LevelFilter"
    min_level: "INFO"
    max_level: "CRITICAL"
  
  # 速率限制过滤器
  rate_limit_filter:
    class: "app.core.logging.filters.RateLimitFilter"
    max_logs_per_second: 100
    burst_size: 200

# 日志轮转配置
rotation:
  # 按大小轮转
  size_based:
    enabled: true
    max_size: "10MB"
    backup_count: 10
    compression: "gzip"
  
  # 按时间轮转
  time_based:
    enabled: true
    when: "midnight"  # midnight, H, D, W0-W6
    interval: 1
    backup_count: 30
    compression: "gzip"
  
  # 自定义轮转
  custom:
    enabled: false
    class: "app.core.logging.handlers.CustomRotatingHandler"
    criteria:
      - "size"
      - "time"
      - "count"

# 日志归档配置
archiving:
  enabled: true
  
  # 本地归档
  local:
    enabled: true
    archive_dir: "logs/archive"
    retention_days: 90
    compression: "gzip"
    cleanup_interval: "daily"
  
  # 远程归档
  remote:
    enabled: false
    
    # S3归档
    s3:
      enabled: false
      bucket: "${S3_LOG_BUCKET}"
      prefix: "logs/rpa-tornado/"
      region: "${AWS_REGION}"
      access_key: "${AWS_ACCESS_KEY}"
      secret_key: "${AWS_SECRET_KEY}"
    
    # FTP归档
    ftp:
      enabled: false
      host: "${FTP_HOST}"
      port: 21
      username: "${FTP_USERNAME}"
      password: "${FTP_PASSWORD}"
      remote_dir: "/logs/rpa-tornado/"

# 日志监控配置
monitoring:
  enabled: true
  
  # 日志统计
  statistics:
    enabled: true
    interval: 300  # 5分钟
    metrics:
      - "log_count_by_level"
      - "log_rate_per_minute"
      - "error_rate"
      - "warning_rate"
  
  # 日志告警
  alerting:
    enabled: true
    
    # 错误率告警
    error_rate_alert:
      enabled: true
      threshold: 5.0  # 每分钟错误数
      window: 300  # 5分钟窗口
      cooldown: 900  # 15分钟冷却期
    
    # 日志量告警
    log_volume_alert:
      enabled: true
      threshold: 1000  # 每分钟日志数
      window: 300  # 5分钟窗口
      cooldown: 600  # 10分钟冷却期
    
    # 磁盘空间告警
    disk_space_alert:
      enabled: true
      threshold: 90.0  # 磁盘使用率百分比
      check_interval: 300  # 5分钟检查间隔
  
  # 日志分析
  analysis:
    enabled: true
    
    # 错误模式分析
    error_pattern_analysis:
      enabled: true
      patterns:
        - "database connection failed"
        - "timeout"
        - "memory error"
        - "permission denied"
    
    # 性能分析
    performance_analysis:
      enabled: true
      slow_request_threshold: 2.0  # 秒
      track_response_times: true

# 结构化日志配置
structured_logging:
  enabled: true
  
  # JSON日志
  json_logging:
    enabled: true
    include_fields:
      - "timestamp"
      - "level"
      - "logger"
      - "message"
      - "request_id"
      - "user_id"
      - "ip_address"
      - "user_agent"
      - "method"
      - "url"
      - "status_code"
      - "response_time"
      - "error_type"
      - "stack_trace"
    
    # 字段映射
    field_mapping:
      timestamp: "@timestamp"
      level: "log_level"
      logger: "logger_name"
      message: "log_message"
  
  # 上下文信息
  context:
    enabled: true
    include_request_context: true
    include_user_context: true
    include_session_context: true
    include_application_context: true

# 日志安全配置
security:
  # 敏感数据保护
  sensitive_data_protection:
    enabled: true
    
    # 敏感字段
    sensitive_fields:
      - "password"
      - "passwd"
      - "secret"
      - "token"
      - "api_key"
      - "apikey"
      - "authorization"
      - "auth"
      - "credit_card"
      - "creditcard"
      - "ssn"
      - "social_security"
      - "phone"
      - "email"
      - "address"
    
    # 敏感模式
    sensitive_patterns:
      - "\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b"  # 信用卡号
      - "\\b\\d{3}-\\d{2}-\\d{4}\\b"  # SSN
      - "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"  # 邮箱
      - "\\b\\d{3}[\\s-]?\\d{3}[\\s-]?\\d{4}\\b"  # 电话号码
    
    # 替换策略
    replacement_strategy: "mask"  # mask, hash, remove
    mask_character: "*"
    preserve_length: true
  
  # 日志加密
  encryption:
    enabled: false
    algorithm: "AES-256-GCM"
    key: "${LOG_ENCRYPTION_KEY}"
    rotate_key_days: 30
  
  # 访问控制
  access_control:
    enabled: true
    log_file_permissions: "640"
    log_dir_permissions: "750"
    owner: "app"
    group: "app"

# 环境特定配置
environments:
  development:
    global:
      root_level: "DEBUG"
    handlers:
      console:
        level: "DEBUG"
        formatter: "detailed"
      debug_file:
        level: "DEBUG"
    loggers:
      root:
        level: "DEBUG"
        handlers:
          - "console"
          - "debug_file"
      app:
        level: "DEBUG"
      tornado:
        level: "INFO"
      sqlalchemy.engine:
        level: "INFO"  # 显示SQL查询
    monitoring:
      enabled: false
    archiving:
      enabled: false
  
  production:
    global:
      root_level: "INFO"
    handlers:
      console:
        level: "WARNING"
      email:
        level: "CRITICAL"
    loggers:
      root:
        level: "INFO"
        handlers:
          - "console"
          - "app_file"
          - "error_file"
          - "email"
      tornado:
        level: "WARNING"
      sqlalchemy:
        level: "ERROR"
    monitoring:
      enabled: true
      alerting:
        enabled: true
    archiving:
      enabled: true
      remote:
        enabled: true
    security:
      sensitive_data_protection:
        enabled: true
      encryption:
        enabled: true
  
  testing:
    global:
      root_level: "WARNING"
    handlers:
      console:
        level: "WARNING"
    loggers:
      root:
        level: "WARNING"
        handlers:
          - "console"
      app:
        level: "WARNING"
    monitoring:
      enabled: false
    archiving:
      enabled: false
    rotation:
      size_based:
        backup_count: 3
      time_based:
        backup_count: 7

# 性能优化配置
performance:
  # 异步日志
  async_logging:
    enabled: true
    queue_size: 1000
    worker_threads: 2
    batch_size: 100
    flush_interval: 1.0  # 秒
  
  # 缓冲配置
  buffering:
    enabled: true
    buffer_size: 8192  # 字节
    flush_level: "ERROR"  # 遇到错误立即刷新
  
  # 压缩配置
  compression:
    enabled: true
    algorithm: "gzip"
    level: 6  # 压缩级别 1-9
  
  # 采样配置
  sampling:
    enabled: false
    sample_rate: 0.1  # 10%采样率
    preserve_errors: true  # 保留所有错误日志

# 集成配置
integrations:
  # ELK Stack集成
  elk:
    enabled: false
    
    # Elasticsearch
    elasticsearch:
      hosts:
        - "http://localhost:9200"
      index_pattern: "rpa-tornado-logs-{date}"
      doc_type: "log"
      username: "${ELASTICSEARCH_USERNAME}"
      password: "${ELASTICSEARCH_PASSWORD}"
    
    # Logstash
    logstash:
      host: "localhost"
      port: 5000
      protocol: "tcp"
    
    # Kibana
    kibana:
      url: "http://localhost:5601"
      dashboard_id: "rpa-tornado-logs"
  
  # Fluentd集成
  fluentd:
    enabled: false
    host: "localhost"
    port: 24224
    tag: "rpa.tornado"
    buffer_size: 1024
  
  # Splunk集成
  splunk:
    enabled: false
    host: "localhost"
    port: 8088
    token: "${SPLUNK_TOKEN}"
    index: "rpa_tornado"
    source: "tornado_app"
    sourcetype: "json"
  
  # Datadog集成
  datadog:
    enabled: false
    api_key: "${DATADOG_API_KEY}"
    service: "rpa-tornado"
    env: "${ENVIRONMENT}"
    version: "${APP_VERSION}"
  
  # New Relic集成
  newrelic:
    enabled: false
    license_key: "${NEWRELIC_LICENSE_KEY}"
    app_name: "RPA Tornado"
    environment: "${ENVIRONMENT}"

# 调试配置
debugging:
  # 调试模式
  debug_mode:
    enabled: false
    log_all_requests: true
    log_request_body: true
    log_response_body: true
    log_headers: true
    log_cookies: true
  
  # 性能调试
  performance_debugging:
    enabled: false
    log_slow_operations: true
    slow_operation_threshold: 1.0  # 秒
    log_memory_usage: true
    log_cpu_usage: true
  
  # SQL调试
  sql_debugging:
    enabled: false
    log_all_queries: true
    log_query_parameters: true
    log_query_execution_time: true
    slow_query_threshold: 0.5  # 秒