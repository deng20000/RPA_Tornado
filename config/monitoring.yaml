# 监控配置文件
# 定义应用监控、指标收集和告警配置

# 全局监控配置
global:
  enabled: true
  monitoring_level: "standard"  # basic, standard, detailed
  collection_interval: 30  # 秒
  retention_days: 30
  timezone: "UTC"

# 应用性能监控 (APM)
apm:
  enabled: true
  
  # 性能指标
  metrics:
    # 响应时间
    response_time:
      enabled: true
      percentiles: [50, 90, 95, 99]
      slow_threshold: 1.0  # 秒
      very_slow_threshold: 5.0  # 秒
    
    # 吞吐量
    throughput:
      enabled: true
      window_size: 60  # 秒
      track_by_endpoint: true
      track_by_method: true
    
    # 错误率
    error_rate:
      enabled: true
      window_size: 300  # 5分钟
      alert_threshold: 5.0  # 百分比
      critical_threshold: 10.0  # 百分比
    
    # 并发连接
    concurrent_connections:
      enabled: true
      max_threshold: 1000
      warning_threshold: 800
  
  # 分布式追踪
  tracing:
    enabled: true
    sample_rate: 0.1  # 10%采样率
    max_trace_length: 100
    
    # Jaeger配置
    jaeger:
      enabled: false
      agent_host: "localhost"
      agent_port: 6831
      service_name: "rpa-tornado"
    
    # Zipkin配置
    zipkin:
      enabled: false
      endpoint: "http://localhost:9411/api/v2/spans"
      service_name: "rpa-tornado"

# 系统资源监控
system_monitoring:
  enabled: true
  
  # CPU监控
  cpu:
    enabled: true
    warning_threshold: 70.0  # 百分比
    critical_threshold: 90.0  # 百分比
    collection_interval: 10  # 秒
  
  # 内存监控
  memory:
    enabled: true
    warning_threshold: 80.0  # 百分比
    critical_threshold: 95.0  # 百分比
    collection_interval: 10  # 秒
    track_heap: true
    track_non_heap: true
  
  # 磁盘监控
  disk:
    enabled: true
    warning_threshold: 80.0  # 百分比
    critical_threshold: 95.0  # 百分比
    collection_interval: 60  # 秒
    monitored_paths:
      - "/"
      - "/var/log"
      - "/tmp"
  
  # 网络监控
  network:
    enabled: true
    collection_interval: 30  # 秒
    track_bandwidth: true
    track_connections: true
    track_errors: true

# 应用监控
application_monitoring:
  enabled: true
  
  # 数据库监控
  database:
    enabled: true
    
    # 连接池监控
    connection_pool:
      enabled: true
      warning_threshold: 80.0  # 百分比
      critical_threshold: 95.0  # 百分比
    
    # 查询性能
    query_performance:
      enabled: true
      slow_query_threshold: 1.0  # 秒
      log_slow_queries: true
      track_query_count: true
    
    # 死锁检测
    deadlock_detection:
      enabled: true
      check_interval: 60  # 秒
  
  # 缓存监控
  cache:
    enabled: true
    
    # Redis监控
    redis:
      enabled: true
      connection_timeout: 5  # 秒
      track_hit_rate: true
      track_memory_usage: true
      track_connections: true
    
    # 内存缓存监控
    memory_cache:
      enabled: true
      track_hit_rate: true
      track_size: true
      track_evictions: true
  
  # 外部API监控
  external_apis:
    enabled: true
    
    # 领星API监控
    lingxing_api:
      enabled: true
      timeout_threshold: 10.0  # 秒
      error_rate_threshold: 5.0  # 百分比
      track_response_time: true
      track_status_codes: true
    
    # 第三方服务监控
    third_party_services:
      enabled: true
      services:
        - name: "payment_gateway"
          url: "https://api.payment.com/health"
          timeout: 5
        - name: "email_service"
          url: "https://api.email.com/status"
          timeout: 3

# 业务指标监控
business_metrics:
  enabled: true
  
  # 用户活动
  user_activity:
    enabled: true
    track_logins: true
    track_api_usage: true
    track_feature_usage: true
    session_timeout: 1800  # 30分钟
  
  # 业务流程
  business_processes:
    enabled: true
    
    # 订单处理
    order_processing:
      enabled: true
      track_processing_time: true
      track_success_rate: true
      track_error_types: true
    
    # 数据同步
    data_sync:
      enabled: true
      track_sync_frequency: true
      track_sync_success_rate: true
      track_data_volume: true
  
  # 自定义指标
  custom_metrics:
    enabled: true
    metrics:
      - name: "api_calls_per_minute"
        type: "counter"
        description: "API调用次数每分钟"
      - name: "data_processing_queue_size"
        type: "gauge"
        description: "数据处理队列大小"
      - name: "user_satisfaction_score"
        type: "histogram"
        description: "用户满意度评分"

# 健康检查
health_checks:
  enabled: true
  
  # 基础健康检查
  basic:
    enabled: true
    endpoint: "/health"
    interval: 30  # 秒
    timeout: 5  # 秒
  
  # 详细健康检查
  detailed:
    enabled: true
    endpoint: "/health/detailed"
    interval: 60  # 秒
    timeout: 10  # 秒
    
    # 检查项目
    checks:
      - name: "database"
        enabled: true
        timeout: 5
      - name: "redis"
        enabled: true
        timeout: 3
      - name: "external_api"
        enabled: true
        timeout: 10
      - name: "disk_space"
        enabled: true
        threshold: 90.0
      - name: "memory_usage"
        enabled: true
        threshold: 90.0
  
  # 就绪检查
  readiness:
    enabled: true
    endpoint: "/ready"
    checks:
      - "database"
      - "redis"
      - "configuration"
  
  # 存活检查
  liveness:
    enabled: true
    endpoint: "/alive"
    simple_response: true

# 告警配置
alerting:
  enabled: true
  
  # 告警规则
  rules:
    # 高错误率告警
    high_error_rate:
      enabled: true
      condition: "error_rate > 5.0"
      duration: "5m"
      severity: "warning"
      message: "错误率过高: {{ $value }}%"
    
    # 响应时间过慢告警
    slow_response:
      enabled: true
      condition: "response_time_p95 > 2.0"
      duration: "3m"
      severity: "warning"
      message: "响应时间过慢: {{ $value }}s"
    
    # 系统资源告警
    high_cpu_usage:
      enabled: true
      condition: "cpu_usage > 80.0"
      duration: "5m"
      severity: "warning"
      message: "CPU使用率过高: {{ $value }}%"
    
    high_memory_usage:
      enabled: true
      condition: "memory_usage > 85.0"
      duration: "5m"
      severity: "critical"
      message: "内存使用率过高: {{ $value }}%"
    
    # 数据库连接告警
    database_connection_pool:
      enabled: true
      condition: "db_pool_usage > 90.0"
      duration: "2m"
      severity: "critical"
      message: "数据库连接池使用率过高: {{ $value }}%"
    
    # 外部API告警
    external_api_failure:
      enabled: true
      condition: "external_api_error_rate > 10.0"
      duration: "3m"
      severity: "warning"
      message: "外部API错误率过高: {{ $value }}%"
  
  # 告警通道
  channels:
    # 邮件通知
    email:
      enabled: false
      smtp_host: "${SMTP_HOST}"
      smtp_port: 587
      username: "${SMTP_USERNAME}"
      password: "${SMTP_PASSWORD}"
      from_address: "alerts@yourdomain.com"
      to_addresses:
        - "admin@yourdomain.com"
        - "ops@yourdomain.com"
    
    # Slack通知
    slack:
      enabled: false
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#alerts"
      username: "AlertBot"
    
    # 钉钉通知
    dingtalk:
      enabled: false
      webhook_url: "${DINGTALK_WEBHOOK_URL}"
      secret: "${DINGTALK_SECRET}"
    
    # 企业微信通知
    wechat_work:
      enabled: false
      webhook_url: "${WECHAT_WORK_WEBHOOK_URL}"
    
    # Webhook通知
    webhook:
      enabled: false
      url: "${ALERT_WEBHOOK_URL}"
      method: "POST"
      headers:
        Content-Type: "application/json"
        Authorization: "Bearer ${WEBHOOK_TOKEN}"
  
  # 告警抑制
  suppression:
    enabled: true
    
    # 重复告警抑制
    duplicate_suppression:
      enabled: true
      window: "1h"  # 1小时内相同告警只发送一次
    
    # 维护窗口
    maintenance_windows:
      enabled: true
      windows:
        - name: "weekly_maintenance"
          start: "02:00"
          end: "04:00"
          days: ["sunday"]
          timezone: "UTC"

# 指标导出
metrics_export:
  enabled: true
  
  # Prometheus导出
  prometheus:
    enabled: true
    endpoint: "/metrics"
    port: 9090
    namespace: "rpa_tornado"
    
    # 指标配置
    metrics:
      - name: "http_requests_total"
        type: "counter"
        help: "Total HTTP requests"
        labels: ["method", "endpoint", "status"]
      
      - name: "http_request_duration_seconds"
        type: "histogram"
        help: "HTTP request duration"
        labels: ["method", "endpoint"]
        buckets: [0.1, 0.5, 1.0, 2.0, 5.0, 10.0]
      
      - name: "system_cpu_usage"
        type: "gauge"
        help: "System CPU usage percentage"
      
      - name: "system_memory_usage"
        type: "gauge"
        help: "System memory usage percentage"
  
  # InfluxDB导出
  influxdb:
    enabled: false
    url: "${INFLUXDB_URL}"
    database: "rpa_tornado"
    username: "${INFLUXDB_USERNAME}"
    password: "${INFLUXDB_PASSWORD}"
    batch_size: 100
    flush_interval: 10  # 秒
  
  # StatsD导出
  statsd:
    enabled: false
    host: "localhost"
    port: 8125
    prefix: "rpa_tornado"

# 日志监控
log_monitoring:
  enabled: true
  
  # 日志聚合
  log_aggregation:
    enabled: true
    
    # ELK Stack
    elasticsearch:
      enabled: false
      hosts:
        - "http://localhost:9200"
      index_pattern: "rpa-tornado-logs-*"
      username: "${ELASTICSEARCH_USERNAME}"
      password: "${ELASTICSEARCH_PASSWORD}"
    
    # Fluentd
    fluentd:
      enabled: false
      host: "localhost"
      port: 24224
      tag: "rpa.tornado"
  
  # 日志分析
  log_analysis:
    enabled: true
    
    # 错误日志分析
    error_analysis:
      enabled: true
      patterns:
        - "ERROR"
        - "CRITICAL"
        - "FATAL"
      alert_threshold: 10  # 每分钟错误数
    
    # 安全日志分析
    security_analysis:
      enabled: true
      patterns:
        - "authentication failed"
        - "authorization denied"
        - "suspicious activity"
      alert_threshold: 5  # 每分钟安全事件数

# 性能分析
performance_profiling:
  enabled: false  # 生产环境建议关闭
  
  # CPU分析
  cpu_profiling:
    enabled: false
    sample_rate: 0.01  # 1%采样率
    duration: 30  # 秒
  
  # 内存分析
  memory_profiling:
    enabled: false
    sample_rate: 0.01  # 1%采样率
    track_allocations: true
  
  # 分析报告
  profiling_reports:
    enabled: false
    output_dir: "./profiling"
    retention_days: 7

# 环境特定配置
environments:
  development:
    global:
      monitoring_level: "detailed"
      collection_interval: 10
    apm:
      tracing:
        sample_rate: 1.0  # 100%采样
    performance_profiling:
      enabled: true
    alerting:
      enabled: false
  
  production:
    global:
      monitoring_level: "standard"
      collection_interval: 30
    apm:
      tracing:
        sample_rate: 0.1  # 10%采样
    performance_profiling:
      enabled: false
    alerting:
      enabled: true
      channels:
        email:
          enabled: true
        slack:
          enabled: true
  
  testing:
    global:
      monitoring_level: "basic"
      retention_days: 7
    apm:
      enabled: false
    alerting:
      enabled: false
    metrics_export:
      enabled: false

# 监控仪表板
dashboards:
  enabled: true
  
  # Grafana配置
  grafana:
    enabled: false
    url: "http://localhost:3000"
    username: "${GRAFANA_USERNAME}"
    password: "${GRAFANA_PASSWORD}"
    
    # 仪表板配置
    dashboards:
      - name: "Application Overview"
        file: "dashboards/app-overview.json"
      - name: "System Metrics"
        file: "dashboards/system-metrics.json"
      - name: "API Performance"
        file: "dashboards/api-performance.json"
  
  # 自定义仪表板
  custom:
    enabled: true
    endpoint: "/dashboard"
    refresh_interval: 30  # 秒
    
    # 仪表板组件
    widgets:
      - type: "metric"
        title: "请求总数"
        metric: "http_requests_total"
        aggregation: "sum"
      
      - type: "chart"
        title: "响应时间趋势"
        metric: "http_request_duration_seconds"
        chart_type: "line"
        time_range: "1h"
      
      - type: "gauge"
        title: "CPU使用率"
        metric: "system_cpu_usage"
        min: 0
        max: 100
        thresholds:
          warning: 70
          critical: 90